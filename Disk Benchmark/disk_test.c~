#include <stdio.h>
#include <pthread.h>
#include <string.h>
#include <stdlib.h>
#include<sys/time.h>
#define NUM_BLOCKS 5000000
#define BLOCK_SIZE 2048
#define NUM_THREADS 1

long start_times[NUM_THREADS];
long end_times[NUM_THREADS];

void computeTPT(){
int i;
double time_sec;
long least_begin_time=start_times[0];
long greatest_finish_time=end_times[NUM_THREADS-1];

for(i=0;i<NUM_THREADS;i++){
  if(least_begin_time>start_times[i])
    least_begin_time=start_times[i];
  if(greatest_finish_time<end_times[i])
    greatest_finish_time=end_times[i];
  }
  time_sec=(greatest_finish_time-least_begin_time)/1000000.0;
 printf("Time elapsed:%lf",time_sec );
 printf("Throughput:%lf MB/sec", (double)((double)NUM_BLOCKS*BLOCK_SIZE)/(time_sec*1024*1024));
}

void disk_rand_write(void *threadid)
{
    printf("inside random write");
   long tid=(long)threadid;
   struct timeval start,stop;
   FILE *fp;
   int i;
   char buffer[BLOCK_SIZE+1];
   memset(buffer,'$',BLOCK_SIZE); 
   /* Open file for both reading and writing */
   char filename[5]; 
   sprintf(filename, "%ld", tid);
   fp = fopen(filename, "w+");// creates file
   /* Write data to the file */
   for(i=0;i < 4;i++){
   printf("inside random write loop");
   fwrite("a",1 , 1, fp);
   }
   gettimeofday(&start,NULL);
   start_times[tid]=start.tv_sec*1000000 + start.tv_usec;
   for(i=0;i < 4 ;i++){
   fseek(fp, rand()%((NUM_BLOCKS/BLOCK_SIZE)/NUM_THREADS), SEEK_SET);
   fwrite(buffer, BLOCK_SIZE,1, fp);
   }
   gettimeofday(&stop,NULL);
   end_times[tid]=stop.tv_sec*1000000 + stop.tv_usec;
   fclose(fp);
}


main(){

long t=0;
disk_rand_write((void *)t);
computeTPT();
}
